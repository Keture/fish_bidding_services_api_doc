{
  "openapi": "3.0.3",
  "info": {
    "title": "F3 Services API Reference",
    "summary": "This document provides a comprehensive reference guide for the F3 Services API. The F3 Services API is a set of RESTful endpoints that allow developers to programmatically interact with F3 Services. This document includes detailed descriptions of each available endpoint, as well as the parameters, methods, and data structures used by the API.",
    "description": "Copyright: Â© Keture 2023. All rights reserved. This API reference is provided solely for the purpose of development and testing. Any commercial use or redistribution of this API, or any part thereof, is strictly prohibited without the prior written consent of Keture.",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/api/auth/v1/{lang}/register": {
      "post": {
        "tags": ["Auth service"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "mobile_number", "password", "role"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "mobile_number": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Josiah",
                  "mobile_number": "766641295",
                  "password": "123456",
                  "role": "FISHER"
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Your account has been created successfully."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "The specified mobile number already exists."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/v1/{lang}/login": {
      "post": {
        "tags": ["Auth service"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["mobile_number", "password"],
                "properties": {
                  "mobile_number": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "mobile_number": "766641295",
                  "password": "123456"
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "mobile_number": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "capability_list": {
                      "type": "array"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "id": 5,
                    "name": "Josiah",
                    "mobile_number": "766641295",
                    "role": "FISHER",
                    "capability_list": [
                      "AUCTIONS/CREATE",
                      "AUCTIONS/READ",
                      "USERS/READ"
                    ],
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwicm9sZSI6IkZJU0hFUiIsImNhcGFiaWxpdHlfbGlzdCI6IltcIkFVQ1RJT05TL0NSRUFURVwiLFwiQVVDVElPTlMvUkVBRFwiLFwiVVNFUlMvUkVBRFwiXSIsImlhdCI6MTY3NzA5MDAyOCwiZXhwIjoxNjc5NjgyMDI4fQ.eVaKBdWFXYNEfyoJtZd56Fubuj0In2w-1GHcjYA1BoE"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Your account has not been activated yet."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/v1/{lang}/profile": {
      "get": {
        "tags": ["Auth service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "mobile_number": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "id": 5,
                    "name": "Josiah",
                    "mobile_number": "766641295",
                    "role": "FISHER"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "code": "FAST_JWT_MALFORMED",
                    "error": "Internal Server Error",
                    "message": "The token is malformed."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/v1/{lang}/user/activate": {
      "post": {
        "tags": ["Auth service"],
        "deprecated": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["mobile_number"],
                "properties": {
                  "mobile_number": {
                    "type": "string"
                  }
                },
                "example": {
                  "mobile_number": "0771212123"
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/auth/v1/{lang}/user/lock": {
      "post": {
        "tags": ["Auth service"],
        "deprecated": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["mobile_number"],
                "properties": {
                  "mobile_number": {
                    "type": "string"
                  }
                },
                "example": {
                  "mobile_number": "0771212123"
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/fish/all": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "id": 1,
                      "grade": "XL",
                      "name": "Blue Swimming Crab"
                    },
                    {
                      "id": 2,
                      "grade": "L",
                      "name": "Blue Swimming Crab"
                    },
                    {
                      "id": 3,
                      "grade": "S",
                      "name": "Blue Swimming Crab"
                    },
                    {
                      "id": 4,
                      "grade": "VS",
                      "name": "Blue Swimming Crab"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/fish/new": {
      "post": {
        "tags": ["Bidding service"],
        "deprecated": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["names", "grade", "min_size", "image_url"],
                "properties": {
                  "names": {
                    "type": "string"
                  },
                  "grade": {
                    "type": "string"
                  },
                  "min_size": {
                    "type": "integer"
                  },
                  "image_url": {
                    "type": "string"
                  }
                },
                "example": {
                  "names": "{\"en\":\"Blue Swimming Crab\",\"ta\":\"à®¨à¯à®² à®¨à¯à®à¯à®à®²à¯ à®¨à®£à¯à®à¯\",\"si\":\"à¶±à·à¶½à· à¶´à·à·à·à¶±à·à¶¸à· à¶à¶à·à·à·à·à·\"}",
                  "grade": "XL",
                  "min_size": 700,
                  "image_url": "image path"
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/fish/update": {
      "post": {
        "tags": ["Bidding service"],
        "deprecated": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "names": {
                    "type": "string"
                  },
                  "grade": {
                    "type": "string"
                  },
                  "min_size": {
                    "type": "integer"
                  },
                  "image_url": {
                    "type": "string"
                  }
                },
                "example": {
                  "id": 1,
                  "names": "{\"en\":\"Blue Swimming Crab\",\"ta\":\"à®¨à¯à®² à®¨à¯à®à¯à®à®²à¯ à®¨à®£à¯à®à¯\",\"si\":\"à¶±à·à¶½à· à¶´à·à·à·à¶±à·à¶¸à· à¶à¶à·à·à·à·à·\"}",
                  "grade": "XL",
                  "min_size": 700,
                  "image_url": "image path"
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/fish/delete": {
      "post": {
        "tags": ["Bidding service"],
        "deprecated": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "type": "integer"
                  }
                },
                "example": {
                  "id": 1
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/request/": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "id": 1,
                      "scheduled_end_at": "2023-02-25T18:47:49.000Z",
                      "item_weight": 25.5,
                      "starting_bid_price": 8000,
                      "status": "ACTIVE",
                      "items": {
                        "grade": "XL",
                        "image_url": "https://ik.imagekit.io/f3fishapp/BlueSwimmingCrab_KQYhehJd2.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1661015509786",
                        "name": "Blue Swimming Crab"
                      },
                      "_count": {
                        "bids": 0
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "code": "FAST_JWT_MALFORMED",
                    "error": "Internal Server Error",
                    "message": "The token is malformed."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Bidding service"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "scheduled_end_at",
                  "item_id",
                  "item_weight",
                  "starting_bid_price"
                ],
                "properties": {
                  "scheduled_end_at": {
                    "type": "string"
                  },
                  "item_id": {
                    "type": "integer"
                  },
                  "item_weight": {
                    "type": "number"
                  },
                  "starting_bid_price": {
                    "type": "number"
                  },
                  "images": {
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "scheduled_end_at": "2023-02-25T04:41:47.405Z",
                  "item_id": 1,
                  "item_weight": 25.5,
                  "starting_bid_price": 8000,
                  "description": "Test Description",
                  "images": []
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "The auction has been uploaded successfully."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "code": "P2003",
                    "error": "Internal Server Error",
                    "message": "\nInvalid `fastify.prisma.auctions.create()` invocation in\n/app/routes/api/bidding/v1/_lang/request/index.js:218:52\n\n  215 ) {\n  216   throw new Error(fastify.locale.t(request, \"date_checking\"));\n  217 }\nâ 218 const item = await fastify.prisma.auctions.create(\n  Foreign key constraint failed on the field: `item_id`"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/request/count": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "name": "Josiah",
                    "count": 1
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "code": "FAST_JWT_MALFORMED",
                    "error": "Internal Server Error",
                    "message": "The token is malformed."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/request/{id}": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "scheduled_end_at": {
                      "type": "string"
                    },
                    "item_weight": {
                      "type": "number"
                    },
                    "starting_bid_price": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "auction_images": {
                      "type": "array"
                    },
                    "items": {
                      "type": "object"
                    },
                    "_count": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "id": 1,
                    "scheduled_end_at": "2023-02-25T18:47:49.000Z",
                    "item_weight": 25.5,
                    "starting_bid_price": 8000,
                    "status": "ACTIVE",
                    "auction_images": [],
                    "items": {
                      "image_url": "https://ik.imagekit.io/f3fishapp/BlueSwimmingCrab_KQYhehJd2.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1661015509786",
                      "grade": "XL",
                      "name": "Blue Swimming Crab"
                    },
                    "_count": {
                      "bids": 0
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Cannot read properties of null (reading 'items')"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/request/cancel": {
      "post": {
        "tags": ["Bidding service"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["auction_id"],
                "properties": {
                  "auction_id": {
                    "type": "integer"
                  }
                },
                "example": {
                  "auction_id": 1
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "The auction has been successfully cancelled."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "code": "P2025",
                    "error": "Internal Server Error",
                    "message": "\nInvalid `fastify.prisma.auctions.update()` invocation in\n/app/routes/api/bidding/v1/_lang/request/index.js:362:52\n\n  359 // check access start\n  360 await fastify.access.isAuth(request, \"AUCTIONS/CREATE\");\n  361 //  check access end\nâ 362 const item = await fastify.prisma.auctions.update(\n  An operation failed because it depends on one or more records that were required but not found. Record to update not found."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/market/": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "id": 1,
                      "scheduled_end_at": "2023-02-25T18:47:49.000Z",
                      "item_weight": 25.5,
                      "starting_bid_price": 8000,
                      "status": "ACTIVE",
                      "auction_images": [],
                      "bids": [],
                      "users": {
                        "name": "Josiah"
                      },
                      "items": {
                        "grade": "XL",
                        "image_url": "https://ik.imagekit.io/f3fishapp/BlueSwimmingCrab_KQYhehJd2.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1661015509786",
                        "name": "Blue Swimming Crab"
                      },
                      "_count": {
                        "bids": 0
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/market/{id}": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "scheduled_end_at": {
                      "type": "string"
                    },
                    "item_weight": {
                      "type": "number"
                    },
                    "starting_bid_price": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "users": {
                      "type": "object"
                    },
                    "items": {
                      "type": "object"
                    },
                    "_count": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "id": 1,
                    "scheduled_end_at": "2023-02-25T18:47:49.000Z",
                    "item_weight": 25.5,
                    "starting_bid_price": 8000,
                    "status": "CANCELED",
                    "users": {
                      "name": "Josiah"
                    },
                    "items": {
                      "grade": "XL",
                      "image_url": "https://ik.imagekit.io/f3fishapp/BlueSwimmingCrab_KQYhehJd2.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1661015509786",
                      "name": "Blue Swimming Crab"
                    },
                    "_count": {
                      "bids": 0
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Cannot read properties of null (reading 'items')"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/submission/all": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "id": 1,
                      "bid_price": 10000,
                      "auctions": {
                        "id": 1,
                        "scheduled_end_at": "2023-02-25T18:47:49.000Z",
                        "item_weight": 25.5,
                        "starting_bid_price": 8000,
                        "status": "ACTIVE",
                        "auction_images": [],
                        "bids": [
                          {
                            "bid_price": 10000,
                            "user_id": 6
                          }
                        ],
                        "users": {
                          "name": "Josiah",
                          "mobile_number": "766641295"
                        },
                        "items": {
                          "grade": "XL",
                          "image_url": "https://ik.imagekit.io/f3fishapp/BlueSwimmingCrab_KQYhehJd2.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1661015509786",
                          "name": "Blue Swimming Crab"
                        },
                        "_count": {
                          "bids": 1
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/submission/": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "id": 1,
                      "bid_price": 10000,
                      "auctions": {
                        "id": 1,
                        "scheduled_end_at": "2023-02-25T18:47:49.000Z",
                        "item_weight": 25.5,
                        "starting_bid_price": 8000,
                        "status": "ACTIVE",
                        "auction_images": [],
                        "bids": [
                          {
                            "bid_price": 10000,
                            "user_id": 6
                          }
                        ],
                        "users": {
                          "name": "Josiah",
                          "mobile_number": "766641295"
                        },
                        "items": {
                          "grade": "XL",
                          "image_url": "https://ik.imagekit.io/f3fishapp/BlueSwimmingCrab_KQYhehJd2.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1661015509786",
                          "name": "Blue Swimming Crab"
                        },
                        "_count": {
                          "bids": 1
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Bidding service"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["auction_id", "bid_price"],
                "properties": {
                  "auction_id": {
                    "type": "integer"
                  },
                  "bid_price": {
                    "type": "number"
                  }
                },
                "example": {
                  "auction_id": 1,
                  "bid_price": 8000
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "The bid has been added successfully."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "The bid price should be higher than the current price."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/submission/{id}": {
      "get": {
        "tags": ["Bidding service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "bid_price": {
                      "type": "number"
                    },
                    "auctions": {
                      "type": "object"
                    }
                  },
                  "example": {
                    "id": 1,
                    "bid_price": 10000,
                    "auctions": {
                      "id": 1,
                      "scheduled_end_at": "2023-02-25T18:47:49.000Z",
                      "item_weight": 25.5,
                      "starting_bid_price": 8000,
                      "status": "ACTIVE",
                      "auction_images": [],
                      "bids": [
                        {
                          "bid_price": 10000,
                          "user_id": 6
                        }
                      ],
                      "users": {
                        "name": "Josiah",
                        "mobile_number": "766641295"
                      },
                      "items": {
                        "grade": "XL",
                        "image_url": "https://ik.imagekit.io/f3fishapp/BlueSwimmingCrab_KQYhehJd2.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1661015509786",
                        "name": "Blue Swimming Crab"
                      },
                      "_count": {
                        "bids": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "Cannot read properties of null (reading 'auctions')"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bidding/v1/{lang}/submission/cancel": {
      "post": {
        "tags": ["Bidding service"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["bid_id"],
                "properties": {
                  "bid_id": {
                    "type": "integer"
                  }
                },
                "example": {
                  "bid_id": 1
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "The request was successfully completed."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "This is an invalid role."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/scheduler/v1/{lang}/start": {
      "post": {
        "tags": ["Scheduler service"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["auction_id"],
                "properties": {
                  "auction_id": {
                    "type": "integer"
                  }
                },
                "example": {
                  "auction_id": 1
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "The request was successfully completed."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "This is an invalid role."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/scheduler/v1/{lang}/startAll": {
      "post": {
        "tags": ["Scheduler service"],
        "parameters": [
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "The request was successfully completed."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 500,
                    "error": "Internal Server Error",
                    "message": "This is an invalid role."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "statusCode": 401,
                    "error": "Unauthorized",
                    "message": "Authorization token is invalid: The token signature is invalid."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth service",
      "description": "The authentication microservice is responsible for managing user accounts, providing a secure login mechanism, and enforcing access control to the system."
    },
    {
      "name": "Bidding service",
      "description": "The bidding microservice is responsible for managing the entire bidding process for auctions, including starting new auctions, managing bids from users, and enforcing auction rules and regulations."
    },
    {
      "name": "Scheduler service",
      "description": "The scheduler microservice is responsible for managing the end of auctions, updating the database with the final results, and notifying users who have placed bids on the auction."
    }
  ]
}
